all the crud operations are in controller that is the main api part where we create a prosuct or update a product and fetch and other functionality as well
all the schemas of the database are in modal
all the routing that is to attach a perticular controller to a perticular path that is we will not decalre the paths in the server instance directely but with the help
of routes we do the same
express-session and passport.js are used for the useratuthentication and all that purposes
express-jwt for using the jwt features in passport
jsonwebtoken for creating a jwt token 
also we make the user id independent form every where as now the information is stored in token hence no need to use selectLoggedInUser for getting the role we can directly access the role and id feom the backend
how to save tokens simply by cookies
cookie-parser is simply used to extract cookie form the req header
stripe is used to add the feature fo paymneting
with the help of payment intent which is nothing but an intention to do a payment it can include vaious things like total payment time etc
next step is to setup the checkout page for the user
for adding this we just need to install the livraries as given in stripe custom docummentation then paste the app.js in your respected file as in my case it is StripeCheckout.js from where we will navigate to checkoutForm.js which is also provided in the same documente
stripe-login comman at terminal is required inorder to run stripe webhook in localhost as webhooks are only applicable to the website or in live server
then go to the url that will be availble after the login and simply comes back after the access granted and use the command to test stripe trigger payment_intent.succeeded
also the rewrite code in vercel.json helps in taking routing directly form the node and there is no need to add aditional routings in the vercel.json